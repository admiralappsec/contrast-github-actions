/// <reference types="node" />
import { Agent } from 'http';
export interface Artifact {
    groupId: string;
    artifactId: string;
    version: string;
    extension?: string;
    classifier?: string;
    isSnapShot?: boolean;
    snapShotVersion?: string;
}
export interface FetchOptions {
    /**
     * http.Agent instance, allows custom proxy, certificate etc.
     * @default null
     */
    agent?: Agent | ((parsedUrl: URL) => Agent);
    /**
     * req/res timeout in ms, it resets on redirect. 0 to disable (OS limit applies)
     * @default 0
     */
    timeout?: number;
}
declare const _default: (artifact: Artifact | string, destination?: string | undefined, repository?: string | undefined, filename?: string | undefined, fetchOptions?: FetchOptions) => Promise<string>;
export default _default;
